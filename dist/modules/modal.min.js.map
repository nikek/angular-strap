{"version":3,"file":"modal.min.js","sources":["modal/modal.js"],"names":["angular","module","provider","defaults","this","animation","backdropAnimation","prefixClass","prefixEvent","placement","template","contentTemplate","container","element","backdrop","keyboard","html","show","$get","$window","$rootScope","$compile","$q","$templateCache","$http","$animate","$timeout","$sce","ModalFactory","config","hideOnBackdropClick","evt","target","currentTarget","options","$modal","focus","hide","$options","extend","$promise","fetchTemplate","scope","$scope","$new","forEach","key","trustAsHtml","$hide","$$postDigest","$show","$toggle","toggle","then","templateEl","contentEl","findElement","removeAttr","next","remove","outerHTML","modalLinker","modalElement","backdropElement","isObject","data","replace","htmlReplaceRegExp","trim","apply","init","destroy","$destroy","$emit","parent","after","$element","css","display","addClass","enter","bodyElement","$isShown","$$phase","$root","$digest","el","requestAnimationFrame","on","$onKeyUp","leave","removeClass","off","which","query","document","querySelectorAll","when","get","res","put","String","prototype","setTimeout","body","directive","$location","restrict","link","attr","isDefined","$observe","newValue","bsModal","$watch","content","modal","trigger","$on"],"mappings":"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","sourcesContent":["'use strict';\n\nangular.module('mgcrea.ngStrap.modal', ['mgcrea.ngStrap.helpers.dimensions'])\n\n  .provider('$modal', function() {\n\n    var defaults = this.defaults = {\n      animation: 'am-fade',\n      backdropAnimation: 'am-fade',\n      prefixClass: 'modal',\n      prefixEvent: 'modal',\n      placement: 'top',\n      template: 'modal/modal.tpl.html',\n      contentTemplate: false,\n      container: false,\n      element: null,\n      backdrop: true,\n      keyboard: true,\n      html: false,\n      show: true\n    };\n\n    this.$get = function($window, $rootScope, $compile, $q, $templateCache, $http, $animate, $timeout, $sce, dimensions) {\n\n      var forEach = angular.forEach;\n      var trim = String.prototype.trim;\n      var requestAnimationFrame = $window.requestAnimationFrame || $window.setTimeout;\n      var bodyElement = angular.element($window.document.body);\n      var htmlReplaceRegExp = /ng-bind=\"/ig;\n\n      function ModalFactory(config) {\n\n        var $modal = {};\n\n        // Common vars\n        var options = $modal.$options = angular.extend({}, defaults, config);\n        $modal.$promise = fetchTemplate(options.template);\n        var scope = $modal.$scope = options.scope && options.scope.$new() || $rootScope.$new();\n        if(!options.element && !options.container) {\n          options.container = 'body';\n        }\n\n        // Support scope as string options\n        forEach(['title', 'content'], function(key) {\n          if(options[key]) scope[key] = $sce.trustAsHtml(options[key]);\n        });\n\n        // Provide scope helpers\n        scope.$hide = function() {\n          scope.$$postDigest(function() {\n            $modal.hide();\n          });\n        };\n        scope.$show = function() {\n          scope.$$postDigest(function() {\n            $modal.show();\n          });\n        };\n        scope.$toggle = function() {\n          scope.$$postDigest(function() {\n            $modal.toggle();\n          });\n        };\n\n        // Support contentTemplate option\n        if(options.contentTemplate) {\n          $modal.$promise = $modal.$promise.then(function(template) {\n            var templateEl = angular.element(template);\n            return fetchTemplate(options.contentTemplate)\n            .then(function(contentTemplate) {\n              var contentEl = findElement('[ng-bind=\"content\"]', templateEl[0]).removeAttr('ng-bind').html(contentTemplate);\n              // Drop the default footer as you probably don't want it if you use a custom contentTemplate\n              if(!config.template) contentEl.next().remove();\n              return templateEl[0].outerHTML;\n            });\n          });\n        }\n\n        // Fetch, compile then initialize modal\n        var modalLinker, modalElement;\n        var backdropElement = angular.element('<div class=\"' + options.prefixClass + '-backdrop\"/>');\n        $modal.$promise.then(function(template) {\n          if(angular.isObject(template)) template = template.data;\n          if(options.html) template = template.replace(htmlReplaceRegExp, 'ng-bind-html=\"');\n          template = trim.apply(template);\n          modalLinker = $compile(template);\n          $modal.init();\n        });\n\n        $modal.init = function() {\n\n          // Options: show\n          if(options.show) {\n            scope.$$postDigest(function() {\n              $modal.show();\n            });\n          }\n\n        };\n\n        $modal.destroy = function() {\n\n          // Remove element\n          if(modalElement) {\n            modalElement.remove();\n            modalElement = null;\n          }\n          if(backdropElement) {\n            backdropElement.remove();\n            backdropElement = null;\n          }\n\n          // Destroy scope\n          scope.$destroy();\n\n        };\n\n        $modal.show = function() {\n\n          scope.$emit(options.prefixEvent + '.show.before', $modal);\n          var parent = options.container ? findElement(options.container) : null;\n          var after = options.container ? null : options.element;\n\n          // Fetch a cloned element linked from template\n          modalElement = $modal.$element = modalLinker(scope, function(clonedElement, scope) {});\n\n          // Set the initial positioning.\n          modalElement.css({display: 'block'}).addClass(options.placement);\n\n          // Options: animation\n          if(options.animation) {\n            if(options.backdrop) {\n              backdropElement.addClass(options.backdropAnimation);\n            }\n            modalElement.addClass(options.animation);\n          }\n\n          if(options.backdrop) {\n            $animate.enter(backdropElement, bodyElement, null, function() {});\n          }\n          $animate.enter(modalElement, parent, after, function() {\n            scope.$emit(options.prefixEvent + '.show', $modal);\n          });\n          scope.$isShown = true;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n          // Focus once the enter-animation has started\n          // Weird PhantomJS bug hack\n          var el = modalElement[0];\n          requestAnimationFrame(function() {\n            el.focus();\n          });\n\n          bodyElement.addClass(options.prefixClass + '-open');\n          if(options.animation) {\n            bodyElement.addClass(options.prefixClass + '-with-' + options.animation);\n          }\n\n          // Bind events\n          if(options.backdrop) {\n            modalElement.on('click', hideOnBackdropClick);\n            backdropElement.on('click', hideOnBackdropClick);\n          }\n          if(options.keyboard) {\n            modalElement.on('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        $modal.hide = function() {\n\n          scope.$emit(options.prefixEvent + '.hide.before', $modal);\n          $animate.leave(modalElement, function() {\n            scope.$emit(options.prefixEvent + '.hide', $modal);\n            bodyElement.removeClass(options.prefixClass + '-open');\n            if(options.animation) {\n              bodyElement.removeClass(options.prefixClass + '-with-' + options.animation);\n            }\n          });\n          if(options.backdrop) {\n            $animate.leave(backdropElement, function() {});\n          }\n          scope.$isShown = false;\n          scope.$$phase || (scope.$root && scope.$root.$$phase) || scope.$digest();\n\n          // Unbind events\n          if(options.backdrop) {\n            modalElement.off('click', hideOnBackdropClick);\n            backdropElement.off('click', hideOnBackdropClick);\n          }\n          if(options.keyboard) {\n            modalElement.off('keyup', $modal.$onKeyUp);\n          }\n        };\n\n        $modal.toggle = function() {\n\n          scope.$isShown ? $modal.hide() : $modal.show();\n\n        };\n\n        $modal.focus = function() {\n          modalElement[0].focus();\n        };\n\n        // Protected methods\n\n        $modal.$onKeyUp = function(evt) {\n\n          evt.which === 27 && $modal.hide();\n\n        };\n\n        // Private methods\n\n        function hideOnBackdropClick(evt) {\n          if(evt.target !== evt.currentTarget) return;\n          options.backdrop === 'static' ? $modal.focus() : $modal.hide();\n        }\n\n        return $modal;\n\n      }\n\n      // Helper functions\n\n      function findElement(query, element) {\n        return angular.element((element || document).querySelectorAll(query));\n      }\n\n      function fetchTemplate(template) {\n        return $q.when($templateCache.get(template) || $http.get(template))\n        .then(function(res) {\n          if(angular.isObject(res)) {\n            $templateCache.put(template, res.data);\n            return res.data;\n          }\n          return res;\n        });\n      }\n\n      return ModalFactory;\n\n    };\n\n  })\n\n  .directive('bsModal', function($window, $location, $sce, $modal) {\n\n    return {\n      restrict: 'EAC',\n      scope: true,\n      link: function postLink(scope, element, attr, transclusion) {\n\n        // Directive options\n        var options = {scope: scope, element: element, show: false};\n        angular.forEach(['template', 'contentTemplate', 'placement', 'backdrop', 'keyboard', 'html', 'container', 'animation'], function(key) {\n          if(angular.isDefined(attr[key])) options[key] = attr[key];\n        });\n\n        // Support scope as data-attrs\n        angular.forEach(['title', 'content'], function(key) {\n          attr[key] && attr.$observe(key, function(newValue, oldValue) {\n            scope[key] = $sce.trustAsHtml(newValue);\n          });\n        });\n\n        // Support scope as an object\n        attr.bsModal && scope.$watch(attr.bsModal, function(newValue, oldValue) {\n          if(angular.isObject(newValue)) {\n            angular.extend(scope, newValue);\n          } else {\n            scope.content = newValue;\n          }\n        }, true);\n\n        // Initialize modal\n        var modal = $modal(options);\n\n        // Trigger\n        element.on(attr.trigger || 'click', modal.toggle);\n\n        // Garbage collection\n        scope.$on('$destroy', function() {\n          modal.destroy();\n          options = null;\n          modal = null;\n        });\n\n      }\n    };\n\n  });\n"],"sourceRoot":"/source/"}